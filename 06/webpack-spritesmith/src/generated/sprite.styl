/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$close__red_name = 'close__red';
$close__red_x = 0px;
$close__red_y = 0px;
$close__red_offset_x = 0px;
$close__red_offset_y = 0px;
$close__red_width = 17px;
$close__red_height = 17px;
$close__red_total_width = 72px;
$close__red_total_height = 42px;
$close__red_image = '~sprite.fdaef4.png';
$close__red = 0px 0px 0px 0px 17px 17px 72px 42px '~sprite.fdaef4.png' 'close__red';
$close__turquoise_name = 'close__turquoise';
$close__turquoise_x = 27px;
$close__turquoise_y = 0px;
$close__turquoise_offset_x = -27px;
$close__turquoise_offset_y = 0px;
$close__turquoise_width = 17px;
$close__turquoise_height = 17px;
$close__turquoise_total_width = 72px;
$close__turquoise_total_height = 42px;
$close__turquoise_image = '~sprite.fdaef4.png';
$close__turquoise = 27px 0px -27px 0px 17px 17px 72px 42px '~sprite.fdaef4.png' 'close__turquoise';
$send__hover_name = 'send__hover';
$send__hover_x = 0px;
$send__hover_y = 27px;
$send__hover_offset_x = 0px;
$send__hover_offset_y = -27px;
$send__hover_width = 18px;
$send__hover_height = 15px;
$send__hover_total_width = 72px;
$send__hover_total_height = 42px;
$send__hover_image = '~sprite.fdaef4.png';
$send__hover = 0px 27px 0px -27px 18px 15px 72px 42px '~sprite.fdaef4.png' 'send__hover';
$send__normal_name = 'send__normal';
$send__normal_x = 54px;
$send__normal_y = 0px;
$send__normal_offset_x = -54px;
$send__normal_offset_y = 0px;
$send__normal_width = 18px;
$send__normal_height = 15px;
$send__normal_total_width = 72px;
$send__normal_total_height = 42px;
$send__normal_image = '~sprite.fdaef4.png';
$send__normal = 54px 0px -54px 0px 18px 15px 72px 42px '~sprite.fdaef4.png' 'send__normal';
$retina_close__red_name = 'retina_close__red';
$retina_close__red_x = 0px;
$retina_close__red_y = 0px;
$retina_close__red_offset_x = 0px;
$retina_close__red_offset_y = 0px;
$retina_close__red_width = 34px;
$retina_close__red_height = 34px;
$retina_close__red_total_width = 144px;
$retina_close__red_total_height = 84px;
$retina_close__red_image = '~sprite.fbe442@2x.png';
$retina_close__red = 0px 0px 0px 0px 34px 34px 144px 84px '~sprite.fbe442@2x.png' 'retina_close__red';
$retina_close__turquoise_name = 'retina_close__turquoise';
$retina_close__turquoise_x = 54px;
$retina_close__turquoise_y = 0px;
$retina_close__turquoise_offset_x = -54px;
$retina_close__turquoise_offset_y = 0px;
$retina_close__turquoise_width = 34px;
$retina_close__turquoise_height = 34px;
$retina_close__turquoise_total_width = 144px;
$retina_close__turquoise_total_height = 84px;
$retina_close__turquoise_image = '~sprite.fbe442@2x.png';
$retina_close__turquoise = 54px 0px -54px 0px 34px 34px 144px 84px '~sprite.fbe442@2x.png' 'retina_close__turquoise';
$retina_send__hover_name = 'retina_send__hover';
$retina_send__hover_x = 0px;
$retina_send__hover_y = 54px;
$retina_send__hover_offset_x = 0px;
$retina_send__hover_offset_y = -54px;
$retina_send__hover_width = 36px;
$retina_send__hover_height = 30px;
$retina_send__hover_total_width = 144px;
$retina_send__hover_total_height = 84px;
$retina_send__hover_image = '~sprite.fbe442@2x.png';
$retina_send__hover = 0px 54px 0px -54px 36px 30px 144px 84px '~sprite.fbe442@2x.png' 'retina_send__hover';
$retina_send__normal_name = 'retina_send__normal';
$retina_send__normal_x = 108px;
$retina_send__normal_y = 0px;
$retina_send__normal_offset_x = -108px;
$retina_send__normal_offset_y = 0px;
$retina_send__normal_width = 36px;
$retina_send__normal_height = 30px;
$retina_send__normal_total_width = 144px;
$retina_send__normal_total_height = 84px;
$retina_send__normal_image = '~sprite.fbe442@2x.png';
$retina_send__normal = 108px 0px -108px 0px 36px 30px 144px 84px '~sprite.fbe442@2x.png' 'retina_send__normal';
$spritesheet_width = 72px;
$spritesheet_height = 42px;
$spritesheet_image = '~sprite.fdaef4.png';
$spritesheet_sprites = $close__red $close__turquoise $send__hover $send__normal;
$spritesheet = 72px 42px '~sprite.fdaef4.png' $spritesheet_sprites;
$retina_spritesheet_width = 144px;
$retina_spritesheet_height = 84px;
$retina_spritesheet_image = '~sprite.fbe442@2x.png';
$retina_spritesheet_sprites = $retina_close__red $retina_close__turquoise $retina_send__hover $retina_send__normal;
$retina_spritesheet = 144px 84px '~sprite.fbe442@2x.png' $retina_spritesheet_sprites;

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retinaSprite` and `retinaSprites`.
*/
$close__red_group_name = 'close__red';
$close__red_group = 'close__red' $close__red $retina_close__red;
$close__turquoise_group_name = 'close__turquoise';
$close__turquoise_group = 'close__turquoise' $close__turquoise $retina_close__turquoise;
$send__hover_group_name = 'send__hover';
$send__hover_group = 'send__hover' $send__hover $retina_send__hover;
$send__normal_group_name = 'send__normal';
$send__normal_group = 'send__normal' $send__normal $retina_send__normal;
$retina_groups = $close__red_group $close__turquoise_group $send__hover_group $send__normal_group;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `retinaSprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon_home_group = 'icon-home' $icon_home $icon_home_2x;

.icon-home {
  retinaSprite($icon_home_group)
}
*/
spriteBackgroundSize($sprite) {
  background-size: $sprite[6] $sprite[7];
}

retinaSprite($retina_group) {
  $normal_sprite = $retina_group[1];
  $retina_sprite = $retina_group[2];
  sprite($normal_sprite)

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    spriteImage($retina_sprite)
    spriteBackgroundSize($normal_sprite)
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}

/*
The `retinaSprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in Stylus

retinaSprites($retina_groups);
*/
retinaSprites($retina_groups) {
  for $retina_group in $retina_groups {
    $sprite_name = $retina_group[0];
    .{$sprite_name} {
      retinaSprite($retina_group);
    }
  }
}
