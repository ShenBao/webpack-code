// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$biscuit-name: 'biscuit';
$biscuit-x: 0px;
$biscuit-y: 0px;
$biscuit-offset-x: 0px;
$biscuit-offset-y: 0px;
$biscuit-width: 32px;
$biscuit-height: 32px;
$biscuit-total-width: 54px;
$biscuit-total-height: 504px;
$biscuit-image: './assets/sprite.png';
$biscuit: (0px, 0px, 0px, 0px, 32px, 32px, 54px, 504px, './assets/sprite.png', 'biscuit', );
$cake-name: 'cake';
$cake-x: 0px;
$cake-y: 32px;
$cake-offset-x: 0px;
$cake-offset-y: -32px;
$cake-width: 32px;
$cake-height: 32px;
$cake-total-width: 54px;
$cake-total-height: 504px;
$cake-image: './assets/sprite.png';
$cake: (0px, 32px, 0px, -32px, 32px, 32px, 54px, 504px, './assets/sprite.png', 'cake', );
$equals-name: 'equals';
$equals-x: 0px;
$equals-y: 64px;
$equals-offset-x: 0px;
$equals-offset-y: -64px;
$equals-width: 32px;
$equals-height: 32px;
$equals-total-width: 54px;
$equals-total-height: 504px;
$equals-image: './assets/sprite.png';
$equals: (0px, 64px, 0px, -64px, 32px, 32px, 54px, 504px, './assets/sprite.png', 'equals', );
$fork-name: 'fork';
$fork-x: 0px;
$fork-y: 96px;
$fork-offset-x: 0px;
$fork-offset-y: -96px;
$fork-width: 32px;
$fork-height: 32px;
$fork-total-width: 54px;
$fork-total-height: 504px;
$fork-image: './assets/sprite.png';
$fork: (0px, 96px, 0px, -96px, 32px, 32px, 54px, 504px, './assets/sprite.png', 'fork', );
$github-name: 'github';
$github-x: 0px;
$github-y: 128px;
$github-offset-x: 0px;
$github-offset-y: -128px;
$github-width: 32px;
$github-height: 32px;
$github-total-width: 54px;
$github-total-height: 504px;
$github-image: './assets/sprite.png';
$github: (0px, 128px, 0px, -128px, 32px, 32px, 54px, 504px, './assets/sprite.png', 'github', );
$plus-name: 'plus';
$plus-x: 0px;
$plus-y: 160px;
$plus-offset-x: 0px;
$plus-offset-y: -160px;
$plus-width: 32px;
$plus-height: 32px;
$plus-total-width: 54px;
$plus-total-height: 504px;
$plus-image: './assets/sprite.png';
$plus: (0px, 160px, 0px, -160px, 32px, 32px, 54px, 504px, './assets/sprite.png', 'plus', );
$soda-name: 'soda';
$soda-x: 0px;
$soda-y: 192px;
$soda-offset-x: 0px;
$soda-offset-y: -192px;
$soda-width: 32px;
$soda-height: 32px;
$soda-total-width: 54px;
$soda-total-height: 504px;
$soda-image: './assets/sprite.png';
$soda: (0px, 192px, 0px, -192px, 32px, 32px, 54px, 504px, './assets/sprite.png', 'soda', );
$tea-name: 'tea';
$tea-x: 0px;
$tea-y: 224px;
$tea-offset-x: 0px;
$tea-offset-y: -224px;
$tea-width: 32px;
$tea-height: 32px;
$tea-total-width: 54px;
$tea-total-height: 504px;
$tea-image: './assets/sprite.png';
$tea: (0px, 224px, 0px, -224px, 32px, 32px, 54px, 504px, './assets/sprite.png', 'tea', );
$twitter-name: 'twitter';
$twitter-x: 0px;
$twitter-y: 256px;
$twitter-offset-x: 0px;
$twitter-offset-y: -256px;
$twitter-width: 32px;
$twitter-height: 32px;
$twitter-total-width: 54px;
$twitter-total-height: 504px;
$twitter-image: './assets/sprite.png';
$twitter: (0px, 256px, 0px, -256px, 32px, 32px, 54px, 504px, './assets/sprite.png', 'twitter', );
$douban-name: 'douban';
$douban-x: 0px;
$douban-y: 288px;
$douban-offset-x: 0px;
$douban-offset-y: -288px;
$douban-width: 54px;
$douban-height: 54px;
$douban-total-width: 54px;
$douban-total-height: 504px;
$douban-image: './assets/sprite.png';
$douban: (0px, 288px, 0px, -288px, 54px, 54px, 54px, 504px, './assets/sprite.png', 'douban', );
$qq-name: 'qq';
$qq-x: 0px;
$qq-y: 342px;
$qq-offset-x: 0px;
$qq-offset-y: -342px;
$qq-width: 54px;
$qq-height: 54px;
$qq-total-width: 54px;
$qq-total-height: 504px;
$qq-image: './assets/sprite.png';
$qq: (0px, 342px, 0px, -342px, 54px, 54px, 54px, 504px, './assets/sprite.png', 'qq', );
$renren-name: 'renren';
$renren-x: 0px;
$renren-y: 396px;
$renren-offset-x: 0px;
$renren-offset-y: -396px;
$renren-width: 54px;
$renren-height: 54px;
$renren-total-width: 54px;
$renren-total-height: 504px;
$renren-image: './assets/sprite.png';
$renren: (0px, 396px, 0px, -396px, 54px, 54px, 54px, 504px, './assets/sprite.png', 'renren', );
$weibo-name: 'weibo';
$weibo-x: 0px;
$weibo-y: 450px;
$weibo-offset-x: 0px;
$weibo-offset-y: -450px;
$weibo-width: 54px;
$weibo-height: 54px;
$weibo-total-width: 54px;
$weibo-total-height: 504px;
$weibo-image: './assets/sprite.png';
$weibo: (0px, 450px, 0px, -450px, 54px, 54px, 54px, 504px, './assets/sprite.png', 'weibo', );
$spritesheet-width: 54px;
$spritesheet-height: 504px;
$spritesheet-image: './assets/sprite.png';
$spritesheet-sprites: ($biscuit, $cake, $equals, $fork, $github, $plus, $soda, $tea, $twitter, $douban, $qq, $renren, $weibo, );
$spritesheet: (54px, 504px, './assets/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
